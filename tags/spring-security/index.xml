<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring Security on Wellington Domiciano</title><link>https://wldomiciano.com/tags/spring-security/</link><description>Recent content in Spring Security on Wellington Domiciano</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://wldomiciano.com/tags/spring-security/index.xml" rel="self" type="application/rss+xml"/><item><title>Métodos obsoletos da HttpSecurity no Spring Security 6.1</title><link>https://wldomiciano.com/metodos-obsoletos-da-httpsecurity-spring-security-6-1/</link><pubDate>Sat, 29 Jul 2023 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/metodos-obsoletos-da-httpsecurity-spring-security-6-1/</guid><description>No Spring Security 6.1 vários métodos da classe HttpSecurity tornaram-se obsoletos e isto afeta projetos criados com Spring Boot a partir da versão 3.1.
Métodos como cors(), csrf(), authorizeHttpRequests(), etc&amp;hellip; não devem mais ser usados, pois a expectativa é de que sejam removidos no Spring Security 7.
O que devemos usar atualmente é a versão destes métodos que aceita um Customizer como argumento, o que a documentação chama de Lambda DSL.</description></item></channel></rss>