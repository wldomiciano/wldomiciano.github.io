<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wellington Domiciano</title><link>https://wldomiciano.com/</link><description>Recent content on Wellington Domiciano</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Thu, 12 Oct 2023 12:00:00 -0300</lastBuildDate><atom:link href="https://wldomiciano.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Sobre identificadores de chaves estrangeiras no MySQL</title><link>https://wldomiciano.com/identificadores-de-chaves-estrangeiras-mysql/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/identificadores-de-chaves-estrangeiras-mysql/</guid><description>&lt;p>A sintaxe para definir chaves estrangeiras no MySQL é a seguinte:&lt;/p>
&lt;pre tabindex="0">&lt;code>[CONSTRAINT [symbol]] FOREIGN KEY
 [index_name] (col_name, ...)
 REFERENCES tbl_name (col_name,...)
 [ON DELETE reference_option]
 [ON UPDATE reference_option]

reference_option:
 RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT
&lt;/code>&lt;/pre>&lt;p>Ignorando a parte &lt;em>reference_option&lt;/em>, todos os comandos abaixo são válidos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- Exemplo 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">tbl_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- Exemplo 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">tbl_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- Exemplo 3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">index_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">tbl_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- Exemplo 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">symbol&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">tbl_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- Exemplo 5
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">symbol&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">index_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">tbl_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">col_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Desde a versão 8.0.16 (a versão atual é a 8.1.0), nos exemplos 1, 2 e 3, o MySQL
vai gerar um identificador automaticamente. Isso quer dizer que mesmo que
&amp;ldquo;index_name&amp;rdquo; seja definido, ele será ignorado.&lt;/p></description></item><item><title>Métodos obsoletos da HttpSecurity no Spring Security 6.1</title><link>https://wldomiciano.com/metodos-obsoletos-da-httpsecurity-spring-security-6-1/</link><pubDate>Sat, 29 Jul 2023 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/metodos-obsoletos-da-httpsecurity-spring-security-6-1/</guid><description>&lt;p>No Spring Security 6.1 vários métodos da classe &lt;a href="https://docs.spring.io/spring-security/site/docs/6.1.2/api/org/springframework/security/config/annotation/web/builders/HttpSecurity.html" target="_blank" rel="noopener">&lt;code>HttpSecurity&lt;/code>&lt;/a>
tornaram-se obsoletos e isto afeta projetos criados com Spring Boot a partir da
versão 3.1.&lt;/p>
&lt;p>Métodos como &lt;a href="https://docs.spring.io/spring-security/site/docs/6.1.2/api/org/springframework/security/config/annotation/web/builders/HttpSecurity.html#cors%28%29" target="_blank" rel="noopener">&lt;code>cors()&lt;/code>&lt;/a>, &lt;a href="https://docs.spring.io/spring-security/site/docs/6.1.2/api/org/springframework/security/config/annotation/web/builders/HttpSecurity.html#csrf%28%29" target="_blank" rel="noopener">&lt;code>csrf()&lt;/code>&lt;/a>,
&lt;a href="https://docs.spring.io/spring-security/site/docs/6.1.2/api/org/springframework/security/config/annotation/web/builders/HttpSecurity.html#authorizeHttpRequests%28%29" target="_blank" rel="noopener">&lt;code>authorizeHttpRequests()&lt;/code>&lt;/a>, etc&amp;hellip; não devem mais ser usados, pois a
expectativa é de que sejam removidos no Spring Security 7.&lt;/p>
&lt;p>O que devemos usar atualmente é a versão destes métodos que aceita um
&lt;a href="https://docs.spring.io/spring-security/site/docs/6.1.2/api/org/springframework/security/config/Customizer.html" target="_blank" rel="noopener">&lt;code>Customizer&lt;/code>&lt;/a> como argumento, o que a documentação chama de &lt;em>Lambda
DSL&lt;/em>.&lt;/p>
&lt;p>Então, o que antes seria configurado assim:&lt;/p></description></item><item><title>O método toString do Java</title><link>https://wldomiciano.com/o-metodo-to-string-do-java/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/o-metodo-to-string-do-java/</guid><description>&lt;p>Criou uma classe maneira e na hora de mostrar o resultado com &lt;code>print()&lt;/code> viu uns números estranhos?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">User&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;João&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">29&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Apenas um ex.: User@1a2b3c&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Não se preocupe, a sua classe está apenas usando o método &lt;code>toString()&lt;/code> implementado na classe &lt;code>Object&lt;/code>.&lt;/p></description></item><item><title>Como agrupar asserts no JUnit</title><link>https://wldomiciano.com/como-agrupar-asserts-no-junit/</link><pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/como-agrupar-asserts-no-junit/</guid><description>&lt;p>Pode haver momentos em que precisamos usar múltiplos asserts em um mesmo teste. Independente se você considera certo ou errado, afinal não estamos aqui para julgar, eu gostaria de apresentar uma forma de lidar melhor com estes asserts agrupando-os através do método &lt;a href="https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/Assertions.html#assertAll%28org.junit.jupiter.api.function.Executable...%29" target="_blank" rel="noopener">&lt;code>assertAll()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>No código abaixo eu tenho 2 testes, cada um com 2 asserts que falham. No primeiro eu usei asserts individuais enquanto no segundo eu os agrupei.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.junit.jupiter.api.Assertions.assertAll&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.junit.jupiter.api.Assertions.fail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.junit.jupiter.api.Test&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">AppTest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">usingIndividualAsserts&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">fail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Test 1, assert 1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">fail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Test 1, assert 2&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">usingGroupedAsserts&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Test 2, assert 1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Test 2, assert 2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Meu &lt;code>build.gradle.kts&lt;/code> está assim (estou usando Gradle 8.4):&lt;/p></description></item><item><title>A classe Boolean do Java</title><link>https://wldomiciano.com/a-classe-boolean-do-java/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/a-classe-boolean-do-java/</guid><description>&lt;p>A partir do Java 9 os construtores da classe &lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html" target="_blank" rel="noopener">&lt;code>Boolean&lt;/code>&lt;/a> tornaram-se
obsoletos e quando queremos usar instâncias de &lt;code>Boolean&lt;/code> usamos as constantes
&lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html#TRUE" target="_blank" rel="noopener">&lt;code>Boolean.TRUE&lt;/code>&lt;/a> ou &lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html#FALSE" target="_blank" rel="noopener">&lt;code>Boolean.FALSE&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Podemos obter uma destas constantes a partir de um primitivo usando o método
&lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html#valueOf%28boolean%29" target="_blank" rel="noopener">&lt;code>Boolean.valueOf()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">TRUE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FALSE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este método também aceita uma &lt;code>String&lt;/code> que, se for igual a palavra &lt;strong>true&lt;/strong>
ignorando se as letras são maiúsculas ou minúsculas, o resultado será igual a
&lt;code>Boolean.TRUE&lt;/code>, caso contrário será &lt;code>Boolean.FALSE&lt;/code>.&lt;/p></description></item><item><title>Como ler e escrever arquivos de texto com Java</title><link>https://wldomiciano.com/como-ler-e-escrever-arquivos-de-texto-em-java/</link><pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/como-ler-e-escrever-arquivos-de-texto-em-java/</guid><description>&lt;p>Neste artigo eu apresento alguns casos de usos simples de leitura e escrita de arquivos de texto com Java.&lt;/p>
&lt;h2 id="leitura">Leitura&lt;/h2>
&lt;p>O código abaixo mostra como retornar todo o conteúdo de um arquivo de texto como uma &lt;code>String&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.charset.StandardCharsets.UTF_16&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.IOException&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Files&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Path&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Paths&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReadingAllContent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Paths&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;text.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Files&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readAllBytes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UTF_16&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Com Java 11 ou mais recente o código fica mais simples usando o método &lt;a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/Files.html#readString%28java.nio.file.Path,java.nio.charset.Charset%29" target="_blank" rel="noopener">&lt;code>Files#readString&lt;/code>&lt;/a>:&lt;/p></description></item><item><title>Como usar o decorator @Attribute em Angular</title><link>https://wldomiciano.com/como-usar-decorator-attribute-em-angular/</link><pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/como-usar-decorator-attribute-em-angular/</guid><description>&lt;p>O &lt;em>decorator&lt;/em> &lt;a href="https://angular.io/api/core/Attribute" target="_blank" rel="noopener">&lt;code>@Attribute&lt;/code>&lt;/a> permite passar dados de um componente pai para um componente filho de forma bem parecida com como é feito com o decorator &lt;a href="https://angular.io/api/core/Input" target="_blank" rel="noopener">&lt;code>@Input&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Mas &lt;code>@Attribute&lt;/code> é bastante limitado em comparação com &lt;code>@Input&lt;/code> já que ele permite apenas &lt;code>string&lt;/code> estática.&lt;/p>
&lt;h2 id="como-usar">Como usar&lt;/h2>
&lt;p>Primeiro, você deve decorar um parâmetro do &lt;em>constructor&lt;/em>.&lt;/p>
&lt;p>No código abaixo eu usei a palavra-chave &lt;code>readonly&lt;/code> apenas por questão de preferência, seu parâmetro não precisa ser &amp;ldquo;read-only&amp;rdquo; e você pode usar qualquer modificador de acesso que quiser.&lt;/p></description></item><item><title>Como instalar o VS Code e Google Chrome oficiais no Ubuntu pela linha de comando</title><link>https://wldomiciano.com/comandos-para-instalar-vscode-e-chrome-no-ubuntu/</link><pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/comandos-para-instalar-vscode-e-chrome-no-ubuntu/</guid><description>&lt;p>Tenho costume de visitar os sites de cada um destes programas para baixar os arquivos &lt;code>.deb&lt;/code> sempre que preciso instalá-los novamente no Ubuntu, mas fazer o processo pela linha de comando é muito mais cômodo.&lt;/p>
&lt;p>Comparadas com as instruções oficiais do VS Code, as minhas instruções diferem nos seguintes pontos:&lt;/p>
&lt;ol>
&lt;li>Eu uso o &lt;code>apt&lt;/code> ao invés do &lt;code>apt-get&lt;/code>.&lt;/li>
&lt;li>Aqui uso &lt;code>wget&lt;/code> ao invés do &lt;code>curl&lt;/code> porque o &lt;code>wget&lt;/code> já vem instalado no Ubuntu.&lt;/li>
&lt;li>Eu não instalo o pacote &lt;code>apt-transport-https&lt;/code> porque ele não é necessário desde a versão 1.5 do &lt;code>apt&lt;/code>.&lt;/li>
&lt;li>Eu aproveito o passo 2 para remover o arquivo &lt;em>packages.microsoft.gpg&lt;/em> já que ele não é mais necessário.&lt;/li>
&lt;/ol>
&lt;h2 id="passos-para-instalar-o-visual-studio-code">Passos para instalar o Visual Studio Code&lt;/h2>
&lt;p>1 - Baixa a chave da Microsoft&lt;/p></description></item><item><title>O que são os Compound Literals em C</title><link>https://wldomiciano.com/o-que-sao-compound-literals-em-c/</link><pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/o-que-sao-compound-literals-em-c/</guid><description>&lt;p>Você já ouviu falar sobre &lt;em>Compound Literals&lt;/em> em C?&lt;/p>
&lt;p>O nome pode lhe ser estranho, mas há grandes chances de que você já tenha usado este recurso.&lt;/p>
&lt;p>Ele faz parte da linguagem desde o C99 e se ainda não o conhece, eu vou te explicar.&lt;/p>
&lt;p>Imagina que você tem uma &lt;code>struct&lt;/code> chamada &lt;code>Point&lt;/code> e uma função capaz de somar dois Points.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">Point&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Point&lt;/span> &lt;span class="nf">sumPoints&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Point&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Point&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Point&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ao invocar a função acima, você é obrigado a fornecer 2 Points válidos. Então, teríamos que fazer algo assim:&lt;/p></description></item><item><title>Como criar checkbox e radio buttons personalizados com CSS</title><link>https://wldomiciano.com/como-personalizar-checkbox-radio-button-com-css/</link><pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/como-personalizar-checkbox-radio-button-com-css/</guid><description>&lt;p>Quando criando formulários, é fácil personalizar caixas de texto e botões, mas é necessário algum trabalho adicional para fazer o mesmo com checkboxes e radio buttons.&lt;/p>
&lt;p>Neste artigo, mostro o passo-a-passo para a personalização da checkbox e, ao final, apresento o código pronto juntamente com um exemplo usando radio button.&lt;/p>
&lt;h2 id="primeiros-passos">Primeiros passos&lt;/h2>
&lt;p>O segredo para começar está na interação entre o elemento &lt;code>&amp;lt;input&amp;gt;&lt;/code> e o elemento &lt;code>&amp;lt;label&amp;gt;&lt;/code> associado a ele.&lt;/p></description></item><item><title>SDL 2 - O guia definitivo para criar caixas de mensagem</title><link>https://wldomiciano.com/guia-para-criar-caixas-de-mensagem-sdl-2/</link><pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/guia-para-criar-caixas-de-mensagem-sdl-2/</guid><description>&lt;h2 id="apresentação">Apresentação&lt;/h2>
&lt;p>Quando trabalhando com SDL 2, como desenvolvedor, gosto de fazer testes usando a função &lt;code>SDL_Log()&lt;/code> para imprimir mensagens no terminal e saber como anda a execução do meu código.&lt;/p>
&lt;p>Porém, como usuário, ao executar um jogo, não é muito atrativo ter que abrir o terminal e interpretar as mensagens ali apresentadas para saber o que aconteceu de errado.&lt;/p>
&lt;p>Como uma alternativa ao uso das mensagens no terminal, a SDL 2 fornece funções para criar caixas de mensagem.&lt;/p></description></item><item><title>SDL 2 - Apenas um tutorial básico para completos iniciantes</title><link>https://wldomiciano.com/tutorial-de-sdl-2-para-completos-iniciantes/</link><pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/tutorial-de-sdl-2-para-completos-iniciantes/</guid><description>&lt;p>Olá.&lt;/p>
&lt;p>Neste artigo quero lhe ajudar a dar seus primeiros passos com &lt;a href="https://www.libsdl.org/" target="_blank" rel="noopener">SDL 2&lt;/a>, uma biblioteca multimídia escrita em C, bastante usada no desenvolvimento de jogos.&lt;/p>
&lt;p>Começaremos instalando os componentes necessários para o desenvolvimento no Ubuntu e em seguida apresentarei o código que servirá de base para as explicações.&lt;/p>
&lt;h2 id="instalando-as-ferramentas-no-ubuntu">Instalando as ferramentas no Ubuntu&lt;/h2>
&lt;p>Abra o terminal e use o comando abaixo para instalar o compilador e a biblioteca.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install gcc libsdl2-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para compilar nosso exemplo, basta usar o comando abaixo.&lt;/p></description></item><item><title>Instalando e usando o Scoop, um instalador de linha de comando para Windows</title><link>https://wldomiciano.com/instalando-e-usando-o-instalador-scoop/</link><pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/instalando-e-usando-o-instalador-scoop/</guid><description>&lt;p>O Scoop é um instalador de linha de comando para Windows.&lt;/p>
&lt;p>Em outras palavras, com um simples &lt;code>scoop install&lt;/code> é possível instalar programas a partir do &lt;em>Prompt de Comando&lt;/em> ou do &lt;em>PowerShell&lt;/em> de forma semelhante ao que acontece nas distribuições Linux.&lt;/p>
&lt;p>Nem todos os programas estão disponíveis para serem instalados através do Scoop, mas há uma lista extensa deles que vai desde ferramentas de linha de comando como o compilador GCC até programas gráficos como Gimp e Blender.&lt;/p></description></item><item><title>Nomeando posts no Hugo seguindo o padrão do Jekyll</title><link>https://wldomiciano.com/nomeando-posts-no-hugo-seguindo-o-padrao-do-jekyll/</link><pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/nomeando-posts-no-hugo-seguindo-o-padrao-do-jekyll/</guid><description>&lt;p>No Jekyll, por padrão, os posts devem ser nomeados seguindo a convenção ANO-MES-DIA-TITULO-DO-POST.md.&lt;/p>
&lt;pre>&lt;code>2018-07-29-minha-postagem.md
2018-07-29-outra-postagem.md
&lt;/code>&lt;/pre>
&lt;p>Assim, ele extrai a data de publicação a partir do nome do arquivo.&lt;/p>
&lt;p>Esta convenção é muito boa, pois nos dá uma visão cronológica bem clara logo de cara.&lt;/p>
&lt;p>No Hugo, por padrão, não há essa extração e o nome do arquivo inteiro é usado para compor a URL e, considerando que suas postagens ficam dentro da pasta &lt;code>content/blog&lt;/code>, você teria algo como:&lt;/p></description></item><item><title>Sobre a mudança do blog de Jekyll para Hugo</title><link>https://wldomiciano.com/sobre-a-mudanca-do-blog-de-jekyll-para-hugo/</link><pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/sobre-a-mudanca-do-blog-de-jekyll-para-hugo/</guid><description>&lt;p>Quero deixar registrado aqui que hoje tirei o dia para migrar este blog de &lt;a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll&lt;/a> para &lt;a href="https://gohugo.io" target="_blank" rel="noopener">Hugo&lt;/a>, um outro gerador de sites estáticos.&lt;/p>
&lt;h2 id="o-que-são-geradores-de-sites-estáticos">O que são geradores de sites estáticos&lt;/h2>
&lt;p>Diferentes do &lt;a href="https://wordpress.org" target="_blank" rel="noopener">WordPress&lt;/a> e afins, onde cada página é gerada dinamicamente conforme o usuário faz uma requisição, com geradores estáticos suas páginas são todas geradas antes de serem enviadas para o servidor. Quando o usuário faz uma requisição, o servidor apenas manda esta página pronta como resposta.&lt;/p></description></item><item><title>Uma implementação em C, JS e Java do Jogo da Cobrinha com foco na lógica</title><link>https://wldomiciano.com/jogo-da-cobrinha-com-foco-na-logica/</link><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/jogo-da-cobrinha-com-foco-na-logica/</guid><description>&lt;p>O objetivo deste artigo é apresentar uma lógica independente de biblioteca, framework ou linguagem e que, por isso, pode ser facilmente portada.&lt;/p>
&lt;p>Abaixo estão os links para as versões em C (com SDL 2), JavaScript e Java do código completo.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gist.github.com/wldomiciano/b28fc30450c5aac0e8df21a4910388ed" target="_blank" rel="noopener">C version&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/wldomiciano/b7e8550b8fea5a722676cc0e8fe090ad" target="_blank" rel="noopener">JavaScript version&lt;/a> (&lt;a href="https://codepen.io/wldomiciano/full/wjKYzx/" target="_blank" rel="noopener">jogue aqui&lt;/a>)&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/wldomiciano/92fd8ac6939b7dc6711be2ac8bd1b8ca" target="_blank" rel="noopener">Java version&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Ao todo são 10 funções das quais apenas 3 são dependentes da plataforma. Aqui eu apresento a versão em C.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#random">&lt;code>random()&lt;/code>&lt;/a> (não portável)&lt;/li>
&lt;li>&lt;a href="#draw">&lt;code>draw(int, int, int, int)&lt;/code>&lt;/a> (não portável)&lt;/li>
&lt;li>&lt;a href="#main">&lt;code>main(int, char**)&lt;/code>&lt;/a> (não portável)&lt;/li>
&lt;li>&lt;a href="#setDirection">&lt;code>setDirection(int)&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#isOnLimits">&lt;code>isOnLimits()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hasCollisionWithTail">&lt;code>hasCollisionWithTail(int)&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#placeApple">&lt;code>placeApple()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#drawBoard">&lt;code>drawBoard()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#move">&lt;code>move()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#update">&lt;code>update(int)&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="funções-não-portáveis">Funções não portáveis&lt;/h2>
&lt;p>A função &lt;code>random()&lt;/code> gera números aleatórios e será usada para determinar a posição da maçã.&lt;/p></description></item><item><title>Como instalar Emscripten no Windows</title><link>https://wldomiciano.com/como-instalar-emscripten-no-windows/</link><pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/como-instalar-emscripten-no-windows/</guid><description>&lt;p>Neste tutorial vou mostrar como instalar e configurar o Emscripten, uma ferramenta que compila seu código nativo C ou C++ para JavaScript e permite rodar seu programa em navegadores Web ou no servidor com Node.js.&lt;/p>
&lt;h2 id="download-e-preparação">Download e Preparação&lt;/h2>
&lt;p>Visite a &lt;a href="https://kripken.github.io/emscripten-site/docs/getting_started/downloads.html" target="_blank" rel="noopener">página de download&lt;/a> e baixe o SDK para Windows.&lt;/p>
&lt;p>Extraia o arquivo baixado para um local a sua escolha.&lt;/p>
&lt;h2 id="processo-de-instalação">Processo de Instalação&lt;/h2>
&lt;p>Abra o Prompt de Comando, navegue até o local escolhido e execute os comandos abaixo.&lt;/p></description></item><item><title>SDL 2 - Como criar um template customizado para o Visual Studio 2017</title><link>https://wldomiciano.com/como-criar-template-sdl2-no-visual-studio/</link><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/como-criar-template-sdl2-no-visual-studio/</guid><description>&lt;p>Configurar um ambiente de desenvolvimento para SDL 2 no Windows com Visual Studio, não é difícil, porém, devido aos vários detalhes nas configurações, pode ser um tanto complicado.&lt;/p>
&lt;p>Pensando nisso, resolvi fazer um vídeo onde mostro como realizar essas configurações e como criar um template baseado nelas para facilitar a criação de novos projetos.&lt;/p>
&lt;p>Tentei ser breve, objetivo e não editar tanto.&lt;/p>
&lt;div class="video-responsive">
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/sO-FzL2NbWY" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;/div></description></item><item><title>SDL 2 - Como lidar com eventos únicos do teclado</title><link>https://wldomiciano.com/sdl-2-como-lidar-com-eventos-unicos-do-teclado/</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/sdl-2-como-lidar-com-eventos-unicos-do-teclado/</guid><description>&lt;p>Em &lt;a href="https://www.libsdl.org/" target="_blank" rel="noopener">SDL&lt;/a>, quando queremos tratar eventos, usamos uma função parecida com a do trecho abaixo dentro do nosso &lt;a href="https://en.wikipedia.org/wiki/Game_programming#Game_structure" target="_blank" rel="noopener">&lt;em>game loop&lt;/em>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">handleInput&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_Event&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">SDL_PollEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nl">SDL_QUIT&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SDL_TRUE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nl">SDL_KEYDOWN&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// do something
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nl">SDL_KEYUP&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// do something
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mas há momentos em que queremos tratar certos eventos (no caso, eventos de teclado) fora dessa função, e para esses momentos o SDL nos fornece a &lt;a href="https://wiki.libsdl.org/SDL_GetKeyboardState" target="_blank" rel="noopener">&lt;code>SDL_GetKeyboardState()&lt;/code>&lt;/a>, que podemos &amp;ldquo;embrulhar&amp;rdquo; numa outra função pra ficar mais amigável.&lt;/p></description></item><item><title>SDL 2 - Como misturar texto com números usando SDL_ttf</title><link>https://wldomiciano.com/sdl-2-como-misturar-texto-com-numeros-sdl-ttf/</link><pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/sdl-2-como-misturar-texto-com-numeros-sdl-ttf/</guid><description>&lt;p>Usar a biblioteca &lt;a href="https://www.libsdl.org/projects/SDL_ttf" target="_blank" rel="noopener">SDL_ttf&lt;/a> (com &lt;a href="https://www.libsdl.org" target="_blank" rel="noopener">SDL 2&lt;/a>) não tem segredo.&lt;/p>
&lt;ol>
&lt;li>Você inicializa com &lt;code>TTF_Init()&lt;/code>&lt;/li>
&lt;li>Carrega uma fonte com &lt;code>TTF_OpenFont()&lt;/code>&lt;/li>
&lt;li>Cria um texto com &lt;code>TTF_RenderText_Solid()&lt;/code>&lt;/li>
&lt;li>E desenha na tela com &lt;code>SDL_BlitSurface()&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Olha um exemplo &lt;a href="https://gist.github.com/wldomiciano/c7fecb4e7af1cd57342390b22800c771" target="_blank" rel="noopener">aqui neste gist&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Obs.: Para usar os exemplo deste artigo é necessário que o arquivo &lt;em>VT323.ttf&lt;/em> esteja na mesma pasta que os códigos.&lt;/p>
&lt;p>Você pode baixar esta fonte neste link:
&lt;a href="https://fonts.google.com/specimen/VT323" target="_blank" rel="noopener">https://fonts.google.com/specimen/VT323&lt;/a>&lt;/p>
&lt;p>Renomeie o arquivo baixado caso seja necessário.&lt;/p>
&lt;/blockquote>
&lt;p>Este tipo de dado muda constantemente e o pior: mistura números e texto!&lt;/p></description></item><item><title>Instalando o GCC no Windows com MinGW</title><link>https://wldomiciano.com/instalando-gcc-no-windows-com-mingw/</link><pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/instalando-gcc-no-windows-com-mingw/</guid><description>&lt;p>&lt;strong>UPDATE (07-09-2018)&lt;br>Descobri uma forma ainda mais simples de instalar o GCC que é usando o Scoop. Para saber mais sobre esta ferramenta, leia &lt;a href="https://wldomiciano.com/instalando-e-usando-o-instalador-scoop/">Instalando e usando o Scoop, um instalador de linha de comando para Windows&lt;/a>.&lt;/strong>&lt;/p>
&lt;hr>&lt;br>
&lt;p>O &lt;a href="https://gcc.gnu.org/" target="_blank" rel="noopener">GCC&lt;/a> é um compilador de C, C++ e de &lt;a href="https://gcc.gnu.org/onlinedocs/gcc-7.2.0/gcc/G_002b_002b-and-GCC.html" target="_blank" rel="noopener">algumas outras linguagens&lt;/a>.&lt;/p>
&lt;p>Ele é parte do projeto &lt;a href="https://www.gnu.org/gnu/gnu-history.html" target="_blank" rel="noopener">GNU&lt;/a> e pode ser instalado no Windows através do &lt;a href="http://mingw-w64.org" target="_blank" rel="noopener">MinGW&lt;/a>.&lt;/p>
&lt;p>Há várias formas de se instalar o MinGW e a que apresento aqui é a que considero mais simples.&lt;/p></description></item></channel></rss>