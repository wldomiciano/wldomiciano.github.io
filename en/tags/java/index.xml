<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Wellington Domiciano</title><link>https://wldomiciano.com/en/tags/java/</link><description>Recent content in Java on Wellington Domiciano</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://wldomiciano.com/en/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>The Java's Boolean class</title><link>https://wldomiciano.com/en/the-boolean-class-in-java/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://wldomiciano.com/en/the-boolean-class-in-java/</guid><description>&lt;p>As of Java 9 the &lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html" target="_blank" rel="noopener">&lt;code>Boolean&lt;/code>&lt;/a> class constructors have become deprecated
and when we want to use &lt;code>Boolean&lt;/code> instances we use &lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html#TRUE" target="_blank" rel="noopener">&lt;code>Boolean.TRUE&lt;/code>&lt;/a> or
&lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html#FALSE" target="_blank" rel="noopener">&lt;code>Boolean.FALSE&lt;/code>&lt;/a> constants.&lt;/p>
&lt;p>We can get one of these constants from a primitive using the
&lt;a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html#valueOf%28boolean%29" target="_blank" rel="noopener">&lt;code>Boolean.valueOf()&lt;/code>&lt;/a> method.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">TRUE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FALSE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This method also accepts a &lt;code>String&lt;/code> that, if it equals the word &lt;strong>true&lt;/strong>,
ignoring if the letters are uppercase or lowercase, the result will be equal to
&lt;code>Boolean.TRUE&lt;/code>, otherwise it will be &lt;code>Boolean.FALSE&lt;/code>.&lt;/p></description></item></channel></rss>